// notification_history_screen.dart
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:intl/intl.dart';
import 'package:auth_firebase/logique(bloc)/notification/notification_bloc.dart';
import 'package:auth_firebase/logique(bloc)/notification/notification_state.dart';

import 'package:auth_firebase/data/models/notifications.dart'; // Assurez-vous du bon chemin

class NotificationHistoryScreen extends StatelessWidget {
  const NotificationHistoryScreen({super.key});

  String _getRoleDisplayName(String roleKey) {
    switch (roleKey) {
      case 'all':
        return 'Tous les utilisateurs';
      case 'client':
        return 'Clients';
      case 'worker':
        return 'Travailleurs';
      default:
        return roleKey;
    }
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);

    return Scaffold(
      appBar: AppBar(
        title: const Text('Historique des notifications'),
        backgroundColor: theme.primaryColor,
      ),
      body: BlocBuilder<NotificationBloc, NotificationState>(
        builder: (context, state) {
          if (state is NotificationLoading) {
            return const Center(child: CircularProgressIndicator());
          } else if (state is NotificationLoaded) {
            final notifications = state.notifications.reversed.toList();

            if (notifications.isEmpty) {
              return Center(
                child: Text(
                  "Aucune notification n'a encore été envoyée.",
                  style: theme.textTheme.titleMedium?.copyWith(color: Colors.grey[600]),
                  textAlign: TextAlign.center,
                ),
              );
            }

            return ListView.builder(
              padding: const EdgeInsets.all(12),
              itemCount: notifications.length,
              itemBuilder: (context, index) {
                final notif = notifications[index];
                return Card(
                  elevation: 2.0,
                  margin: const EdgeInsets.symmetric(vertical: 8.0),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  child: ListTile(
                    leading: CircleAvatar(
                      backgroundColor: theme.primaryColorLight.withOpacity(0.3),
                      child: Icon(Icons.notifications_active, color: theme.primaryColorDark),
                    ),
                    title: Text(
                      notif.title,
                      style: const TextStyle(fontWeight: FontWeight.bold),
                    ),
                    subtitle: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          notif.message,
                          maxLines: 2,
                          overflow: TextOverflow.ellipsis,
                        ),
                        const SizedBox(height: 4),
                        Text(
                          "Pour : ${_getRoleDisplayName(notif.targetRole)}",
                          style: TextStyle(fontSize: 12, color: Colors.grey[700]),
                        ),
                      ],
                    ),
                    trailing: Text(
                      DateFormat('dd/MM/yy HH:mm').format(notif.createdAt),
                      style: const TextStyle(fontSize: 12, color: Colors.grey),
                    ),
                    isThreeLine: true,
                    onTap: () {
                      showDialog(
                        context: context,
                        builder: (_) => AlertDialog(
                          title: Text(notif.title),
                          content: SingleChildScrollView(
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Text(notif.message),
                                const SizedBox(height: 10),
                                Text("Destinataire : ${_getRoleDisplayName(notif.targetRole)}"),
                                Text("Envoyée le : ${DateFormat('dd MMMM yyyy \'à\' HH:mm:ss', 'fr_FR').format(notif.createdAt)}"),
                              ],
                            ),
                          ),
                          actions: [
                            TextButton(
                              onPressed: () => Navigator.of(context).pop(),
                              child: const Text("Fermer"),
                            )
                          ],
                        ),
                      );
                    },
                  ),
                );
              },
            );
          } else {
            return const Center(child: Text("Impossible de charger l'historique."));
          }
        },
      ),
    );
  }
}
